<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1.3 (Python 3.10.1 on win32)" generated="20220128 09:26:05.141" rpa="true" schemaversion="2">
<suite id="s1" name="Delorean" source="F:\TesteAutomacao\GravidadeZERO\getgeeks\project\fromtend\tasks\Delorean.robot">
<test id="s1-t1" name="Back To The Past">
<kw name="Connect To Postgres" library="Database">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>psycopg2</arg>
<arg>mqxzeahb</arg>
<arg>mqxzeahb</arg>
<arg>QgujQd0mgXxX7-mQ162si_byL_A790dG</arg>
<arg>castor.db.elephantsql.com</arg>
<arg>5432</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20220128 09:26:05.568" level="INFO">Connecting using : psycopg2.connect(database=mqxzeahb, user=mqxzeahb, password=QgujQd0mgXxX7-mQ162si_byL_A790dG, host=castor.db.elephantsql.com, port=5432) </msg>
<status status="PASS" starttime="20220128 09:26:05.552" endtime="20220128 09:26:06.602"/>
</kw>
<status status="PASS" starttime="20220128 09:26:05.551" endtime="20220128 09:26:06.602"/>
</kw>
<kw name="Reset Env" library="Database">
<kw name="Execute Sql String" library="DatabaseLibrary">
<arg>DELETE from public.geeks;</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20220128 09:26:06.604" level="INFO">Executing : Execute SQL String  |  DELETE from public.geeks; </msg>
<status status="PASS" starttime="20220128 09:26:06.604" endtime="20220128 09:26:07.083"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<arg>DELETE from public.users;</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20220128 09:26:07.083" level="INFO">Executing : Execute SQL String  |  DELETE from public.users; </msg>
<status status="PASS" starttime="20220128 09:26:07.083" endtime="20220128 09:26:07.561"/>
</kw>
<status status="PASS" starttime="20220128 09:26:06.603" endtime="20220128 09:26:07.562"/>
</kw>
<kw name="Users Seed" library="Database">
<kw name="Factory User" library="User">
<var>${user}</var>
<arg>login</arg>
<msg timestamp="20220128 09:26:07.564" level="INFO">${user} = {'name': 'Horley', 'lastName': 'Amorim', 'email': 'horleylamorim@gmail.com', 'password': 'pdw123'}</msg>
<status status="PASS" starttime="20220128 09:26:07.563" endtime="20220128 09:26:07.564"/>
</kw>
<kw name="Insert User" library="Database">
<arg>${user}</arg>
<kw name="Get Hashed Pass" library="User">
<var>${hased_pass}</var>
<arg>${user}[password]</arg>
<msg timestamp="20220128 09:26:07.585" level="INFO">${hased_pass} = $2b$08$D0JYbodNll1LkJeIxb5Az.VNlIVfT1uMuwJbr0nzYMlSI3Nwh5WWe</msg>
<status status="PASS" starttime="20220128 09:26:07.565" endtime="20220128 09:26:07.585"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${q}</var>
<arg>INSERT INTO public.users (name, email, password_hash, is_geek) values ('${user}[name] ${user}[lastName]', '${user}[email]', '${hased_pass}', false)</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220128 09:26:07.586" level="INFO">${q} = INSERT INTO public.users (name, email, password_hash, is_geek) values ('Horley Amorim', 'horleylamorim@gmail.com', '$2b$08$D0JYbodNll1LkJeIxb5Az.VNlIVfT1uMuwJbr0nzYMlSI3Nwh5WWe', false)</msg>
<status status="PASS" starttime="20220128 09:26:07.585" endtime="20220128 09:26:07.586"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<arg>${q}</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20220128 09:26:07.587" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.users (name, email, password_hash, is_geek) values ('Horley Amorim', 'horleylamorim@gmail.com', '$2b$08$D0JYbodNll1LkJeIxb5Az.VNlIVfT1uMuwJbr0nzYMlSI3Nwh5WWe', false) </msg>
<status status="PASS" starttime="20220128 09:26:07.587" endtime="20220128 09:26:08.066"/>
</kw>
<status status="PASS" starttime="20220128 09:26:07.564" endtime="20220128 09:26:08.066"/>
</kw>
<kw name="Factory User" library="User">
<var>${user2}</var>
<arg>be_geek</arg>
<msg timestamp="20220128 09:26:08.068" level="INFO">${user2} = {'name': 'Kim', 'lastName': 'Dotcon', 'email': 'kim@dot.com', 'password': 'pwd123', 'geek_profile': {'whatsapp': '11999999999', 'desc': 'Lorem Ipsum é simplesmente uma simulação de texto da indústria ...</msg>
<status status="PASS" starttime="20220128 09:26:08.067" endtime="20220128 09:26:08.068"/>
</kw>
<kw name="Insert User" library="Database">
<arg>${user2}</arg>
<kw name="Get Hashed Pass" library="User">
<var>${hased_pass}</var>
<arg>${user}[password]</arg>
<msg timestamp="20220128 09:26:08.090" level="INFO">${hased_pass} = $2b$08$nNIJ0AI0PH.HiqIjXsmvd.9pQdW178Z5qJuIeyiBcCuRcLikMuhY6</msg>
<status status="PASS" starttime="20220128 09:26:08.069" endtime="20220128 09:26:08.090"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${q}</var>
<arg>INSERT INTO public.users (name, email, password_hash, is_geek) values ('${user}[name] ${user}[lastName]', '${user}[email]', '${hased_pass}', false)</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220128 09:26:08.091" level="INFO">${q} = INSERT INTO public.users (name, email, password_hash, is_geek) values ('Kim Dotcon', 'kim@dot.com', '$2b$08$nNIJ0AI0PH.HiqIjXsmvd.9pQdW178Z5qJuIeyiBcCuRcLikMuhY6', false)</msg>
<status status="PASS" starttime="20220128 09:26:08.090" endtime="20220128 09:26:08.091"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<arg>${q}</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20220128 09:26:08.092" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.users (name, email, password_hash, is_geek) values ('Kim Dotcon', 'kim@dot.com', '$2b$08$nNIJ0AI0PH.HiqIjXsmvd.9pQdW178Z5qJuIeyiBcCuRcLikMuhY6', false) </msg>
<status status="PASS" starttime="20220128 09:26:08.091" endtime="20220128 09:26:08.569"/>
</kw>
<status status="PASS" starttime="20220128 09:26:08.068" endtime="20220128 09:26:08.570"/>
</kw>
<kw name="Factory User" library="User">
<var>${user3}</var>
<arg>attempt_be_geek</arg>
<msg timestamp="20220128 09:26:08.571" level="INFO">${user3} = {'name': 'Wallce', 'lastName': 'Vick', 'email': 'vicck@yahoo.com', 'password': 'pwd123', 'geek_profile': {'whatsapp': '99999999999', 'desc': 'Lorem Ipsum é simplesmente uma simulação de texto da indús...</msg>
<status status="PASS" starttime="20220128 09:26:08.570" endtime="20220128 09:26:08.571"/>
</kw>
<kw name="Insert User" library="Database">
<arg>${user3}</arg>
<kw name="Get Hashed Pass" library="User">
<var>${hased_pass}</var>
<arg>${user}[password]</arg>
<msg timestamp="20220128 09:26:08.593" level="INFO">${hased_pass} = $2b$08$Lxr9C2Ma.7CZ4vd3LdvhruuGL/Vk.MuxUg5u5rxo.MI18youFUpia</msg>
<status status="PASS" starttime="20220128 09:26:08.572" endtime="20220128 09:26:08.593"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${q}</var>
<arg>INSERT INTO public.users (name, email, password_hash, is_geek) values ('${user}[name] ${user}[lastName]', '${user}[email]', '${hased_pass}', false)</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220128 09:26:08.594" level="INFO">${q} = INSERT INTO public.users (name, email, password_hash, is_geek) values ('Wallce Vick', 'vicck@yahoo.com', '$2b$08$Lxr9C2Ma.7CZ4vd3LdvhruuGL/Vk.MuxUg5u5rxo.MI18youFUpia', false)</msg>
<status status="PASS" starttime="20220128 09:26:08.593" endtime="20220128 09:26:08.594"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<arg>${q}</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20220128 09:26:08.594" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.users (name, email, password_hash, is_geek) values ('Wallce Vick', 'vicck@yahoo.com', '$2b$08$Lxr9C2Ma.7CZ4vd3LdvhruuGL/Vk.MuxUg5u5rxo.MI18youFUpia', false) </msg>
<status status="PASS" starttime="20220128 09:26:08.594" endtime="20220128 09:26:09.076"/>
</kw>
<status status="PASS" starttime="20220128 09:26:08.571" endtime="20220128 09:26:09.076"/>
</kw>
<status status="PASS" starttime="20220128 09:26:07.562" endtime="20220128 09:26:09.076"/>
</kw>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20220128 09:26:09.077" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20220128 09:26:09.077" endtime="20220128 09:26:09.078"/>
</kw>
<status status="PASS" starttime="20220128 09:26:05.550" endtime="20220128 09:26:09.079"/>
</test>
<doc>Delorian</doc>
<status status="PASS" starttime="20220128 09:26:05.146" endtime="20220128 09:26:09.080"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tasks</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Delorean">Delorean</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
